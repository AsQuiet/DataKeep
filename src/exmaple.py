class DataKeepStruct(object):

    def __init__(self, name):
        self.name = name

class DataKeepField(object):

    def __init__(self, name, type_):
        self.name = name
        self.type = type_

class DataKeepTag(object):

    def __init__(self, name):
        self.name = name


##### CODE GENERATED BY DATAKEEP.CS
# import datakeepDPI

ALL_STRUCTS = [] 

for x in range(3):
    n_struct = DataKeepStruct("mystruct" + str(x))
    ALL_STRUCTS.append(n_struct)


###### DATAKEEP DPI (api)

def StructHasTags():
    return None
def StructNameIs():
    return None
def StructHasInheritance():
    return None
def TagHasArguments():
    return None
def GetTagArguments():
    return None
def StructHasFields():
    return None
def FieldHasTags():
    return None
def FieldIsType():
    return None

def LOOP_ALL_STRUCTS(structs, loop):
    for x in range(len(structs)):
        loop(structs[x], x)

###### CODE WRITTEN BY USER


def HandleStruct(struct, structIndex, file):
    print("handling struct" + struct.name)

    # if struct.hasTags(Print):

        


LOOP_ALL_STRUCTS(ALL_STRUCTS, HandleStruct)